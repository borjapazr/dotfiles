#!/usr/bin/env bash

set -o pipefail

source "$DOTFILES_PATH/scripts/core/_main.sh"

##? Usage:
##?    dot
##?    dot <context>
##?    dot <context> <script> [<args>...]
##?    dot -h | --help
if [ "$1" == "-h" ] || [ "$1" = "--help" ]; then
  docs::parse "$@"
fi

fzf_prompt() {
  local paths="$1"
  script="$(
    echo "$paths" |
      xargs -I % sh -c 'echo "$(basename $(dirname %)) $(basename %)"' |
      fzf \
        --height 50% \
        --preview '"$DOTFILES_PATH/bin/dot" $(echo {} | cut -d" " -f 1) $(echo {} | cut -d" " -f 2) -h'
  )"
  if [ -n "$script" ]; then
    printf "%s" "$script"
    read -r args
    "$DOTFILES_PATH/bin/dot" $script $args
  fi
}

if args::has_no_args "$@"; then
  fzf_prompt "$(dot::list_scripts_path)"
elif args::total_is 1 "$@"; then
  fzf_prompt "$(dot::list_scripts_path | grep "/$1/")"
else
  context="$1"
  script="$2"

  shift 2

  if ! dot::script_exist "$DOTFILES_PATH" "$context" "$script"; then
    output::error "The script <$context / $script> doesn't exist"
    exit 1
  fi

  "${DOTFILES_PATH}/scripts/${context}/${script}" "$@"
fi
